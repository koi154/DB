USE codingon_db;

update student SET name = "아이유"
WHERE name = "이지은";

update student
SET name = "로제", age = 20
WHERE name = "박채영";

USE my_shop;

Update orders
SET price = price / 10;
SELECT price FROM orders; 

delete FROM class
	WHERE category LIKE "%엔드";

USE codingon_db;

UPDATE student
SET age = 26
WHERE name = '정국';

UPDATE student
SET age = age + 1
WHERE class_id = 'CLS01'
AND age < 25;

DELETE FROM class
WHERE room LIKE 'G%';

DELETE FROM student
WHERE join_date < '2024-03-01';

use my_shop;

SET @price = 1000;
SELECT @price;

SET @quantity = 3;
SET @total = @price * @quantity;
SELECT @total;

SET @greeting = "안녕하세요";
SELECT @greeting;

select @amount := 1000;

SET @min_price = 100000;
SELECT * FROM orders
where price < @min_price;

-- 시스템 변수 사용법 : auto_increment
CREATE TABLE toy (
	toy_id INT AUTO_INCREMENT PRIMARY KEY,
    toy_name CHAR(4),
    price INT
);

INSERT INTO toy VALUES (NULL, "하츄핑", 100000);
INSERT INTO toy VALUES (NULL, "피카츄", 80000);

ALTER TABLE toy AUTO_INCREMENT=100;

INSERT INTO toy VALUES (NULL, "시나모롤", 50000);

SET @@auto_increment_increment=3;

INSERT INTO toy VALUES (NULL, "레고", 200000);
INSERT INTO toy VALUES (NULL, "레고2", 200000);
INSERT INTO toy VALUES (NULL, "레고3", 200000);



select * FROM toy;

SELECT * 
FROM customers
	INNER JOIN orders
    ON customers.customer_id = orders.customer_id;
    
SELECT *  
FROM customers c
	JOIN orders o
    ON c.customer_id = o.customer_id;
    
SELECT c.customer_id, name, email, order_date, order_status
FROM customers c
	JOIN orders o
    ON c.customer_id = o.customer_id;
    
SELECT c.customer_id, name, email, order_date, order_status
FROM customers c
	JOIN orders o
    ON c.customer_id = o.customer_id
WHERE order_status IS not NULL
ORDER BY order_date;


    
    




